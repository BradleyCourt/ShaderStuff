#version 410

in vec4 worldNormal;
in vec4 worldPosition;
in vec2 uv;

out vec4 fragColor;

uniform vec4 cameraPosition;
uniform sampler2D diffuse;

void main()
{
	// hardcode a light direction
	vec4 light = vec4(0.5,0.7,0.5,0);

	// get the diffuse and ambient intensity
	float intensity = clamp(dot(light, worldNormal), 0, 1) + 0.1;

	// get the unit vector from position to camera
	vec4 toCamera = normalize(worldPosition - cameraPosition);
	vec4 refl = reflect(toCamera, worldNormal);
	float specular = clamp(dot(refl, light), 0, 1);

	// raise to the power of 4 for tighter specular highlights
	specular = pow(specular, 32);

	vec4 texColor = texture(diffuse, uv); //uvPlanar

	// final colour is magenta diffuse/ambient with white specular for a plastic look
	fragColor = texColor*intensity + vec4(specular, specular, specular, 1);
		
	//fragColor = vec4(1);
}